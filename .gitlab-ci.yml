stages:
  - build
  - test
  - deploy

build:
  image: node:16.15.0
  stage: build
  script:
    - npm install
    - npm run build:client
    - npm run build:server
  artifacts:
    expire_in: 1 week
    paths:
      - dist
      - node_modules

npm-audit:
  image: "registry.gitlab.com/gitlab-org/security-products/analyzers/npm-audit:1.4.0"
  stage: test
  variables:
    TOOL: npm
  script:
    - /analyzer run
  artifacts:
    reports:
      dependency_scanning: gl-dependency-scanning-report.json
    paths:
      - gl-dependency-scanning-report.json

deploy:
  image: node:16.15.0
  stage: deploy
  only:
    - main
  script:
    - apt-get update
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
    - mkdir -p ~/.ssh
    - eval $(ssh-agent -s)
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
    - ssh-add <(echo "$PRIVATE_KEY")
    - ssh -p22 $USER@$HOST "mkdir -p $DEPLOY_PATH/tmp"
    - ssh -p22 $USER@$HOST "touch $DEPLOY_PATH/tmp/restart.txt"
    - ssh -p22 $USER@$HOST "mkdir -p $DEPLOY_PATH/_dist"
    - ssh -p22 $USER@$HOST "mkdir -p $DEPLOY_PATH/_node_modules"
    - scp -P22 -r dist/* $USER@$HOST:$DEPLOY_PATH/_dist
    - scp -P22 -r node_modules/* $USER@$HOST:$DEPLOY_PATH/_node_modules
    - ssh -p22 $USER@$HOST "rm -rf $DEPLOY_PATH/dist && rm -rf $DEPLOY_PATH/node_modules"
    - ssh -p22 $USER@$HOST "mv $DEPLOY_PATH/_dist $DEPLOY_PATH/dist && mv $DEPLOY_PATH/_node_modules $DEPLOY_PATH/node_modules"